{"dependencies":[{"name":"./util/assertString","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isLength;\n\n  var _assertString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"./util/assertString\"));\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof (typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== (typeof Symbol === \"function\" ? Symbol.prototype : \"@@prototype\") ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function isLength(str, options) {\n    (0, _assertString.default)(str);\n    var min;\n    var max;\n\n    if (_typeof(options) === 'object') {\n      min = options.min || 0;\n      max = options.max;\n    } else {\n      min = arguments[1];\n      max = arguments[2];\n    }\n\n    var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n    var len = str.length - surrogatePairs.length;\n    return len >= min && (typeof max === 'undefined' || len <= max);\n  }\n\n  module.exports = exports.default;\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"isLength"],[7,28,6,0],[9,0,8,0],[9,6,8,4,"_assertString"],[9,19,8,17],[9,22,8,20,"_interopRequireDefault"],[9,44,8,42],[9,45,8,43,"require"],[9,56,8,50],[9,98,8,42],[9,99,8,0],[11,0,10,0],[11,11,10,9,"_interopRequireDefault"],[11,33,10,0],[11,34,10,32,"obj"],[11,37,10,0],[11,39,10,37],[12,0,10,39],[12,11,10,46,"obj"],[12,14,10,49],[12,18,10,53,"obj"],[12,21,10,56],[12,22,10,57,"__esModule"],[12,32,10,46],[12,35,10,70,"obj"],[12,38,10,46],[12,41,10,76],[13,0,10,78,"default"],[13,6,10,78,"default"],[13,13,10,85],[13,15,10,87,"obj"],[14,0,10,76],[14,5,10,39],[15,0,10,95],[17,0,12,0],[17,11,12,9,"_typeof"],[17,18,12,0],[17,19,12,17,"obj"],[17,22,12,0],[17,24,12,22],[18,0,12,24],[18,8,12,28],[18,15,12,35,"Symbol"],[18,21,12,28],[18,26,12,46],[18,36,12,28],[18,40,12,60],[18,79,12,67,"Symbol"],[18,85,12,73],[18,86,12,74,"iterator"],[18,94,12,60],[18,115,12,87],[18,123,12,24],[18,125,12,97],[19,0,12,99,"_typeof"],[19,6,12,99,"_typeof"],[19,13,12,106],[19,16,12,109],[19,25,12,118,"_typeof"],[19,32,12,109],[19,33,12,126,"obj"],[19,36,12,109],[19,38,12,131],[20,0,12,133],[20,15,12,140],[20,22,12,147,"obj"],[20,25,12,133],[21,0,12,153],[21,7,12,99],[22,0,12,156],[22,5,12,24],[22,11,12,162],[23,0,12,164,"_typeof"],[23,6,12,164,"_typeof"],[23,13,12,171],[23,16,12,174],[23,25,12,183,"_typeof"],[23,32,12,174],[23,33,12,191,"obj"],[23,36,12,174],[23,38,12,196],[24,0,12,198],[24,15,12,205,"obj"],[24,18,12,208],[24,22,12,212],[24,29,12,219,"Symbol"],[24,35,12,212],[24,40,12,230],[24,50,12,205],[24,54,12,244,"obj"],[24,57,12,247],[24,58,12,248,"constructor"],[24,69,12,244],[24,74,12,264,"Symbol"],[24,80,12,205],[24,84,12,274,"obj"],[24,87,12,277],[24,124,12,282,"Symbol"],[24,130,12,288],[24,131,12,289,"prototype"],[24,140,12,277],[24,157,12,205],[24,160,12,301],[24,168,12,205],[24,171,12,312],[24,178,12,319,"obj"],[24,181,12,198],[25,0,12,325],[25,7,12,164],[26,0,12,328],[28,0,12,329],[28,11,12,336,"_typeof"],[28,18,12,343],[28,19,12,344,"obj"],[28,22,12,343],[28,23,12,329],[29,0,12,351],[31,0,15,0],[31,11,15,9,"isLength"],[31,19,15,0],[31,20,15,18,"str"],[31,23,15,0],[31,25,15,23,"options"],[31,32,15,0],[31,34,15,32],[32,0,16,2],[32,5,16,3],[32,8,16,6,"_assertString"],[32,21,16,19],[32,22,16,20,"default"],[32,29,16,2],[32,31,16,29,"str"],[32,34,16,2],[33,0,17,2],[33,8,17,6,"min"],[33,11,17,2],[34,0,18,2],[34,8,18,6,"max"],[34,11,18,2],[36,0,20,2],[36,8,20,6,"_typeof"],[36,15,20,13],[36,16,20,14,"options"],[36,23,20,13],[36,24,20,6],[36,29,20,27],[36,37,20,2],[36,39,20,37],[37,0,21,4,"min"],[37,6,21,4,"min"],[37,9,21,7],[37,12,21,10,"options"],[37,19,21,17],[37,20,21,18,"min"],[37,23,21,10],[37,27,21,25],[37,28,21,4],[38,0,22,4,"max"],[38,6,22,4,"max"],[38,9,22,7],[38,12,22,10,"options"],[38,19,22,17],[38,20,22,18,"max"],[38,23,22,4],[39,0,23,3],[39,5,20,2],[39,11,23,9],[40,0,25,4,"min"],[40,6,25,4,"min"],[40,9,25,7],[40,12,25,10,"arguments"],[40,21,25,19],[40,22,25,20],[40,23,25,19],[40,24,25,4],[41,0,26,4,"max"],[41,6,26,4,"max"],[41,9,26,7],[41,12,26,10,"arguments"],[41,21,26,19],[41,22,26,20],[41,23,26,19],[41,24,26,4],[42,0,27,3],[44,0,29,2],[44,8,29,6,"surrogatePairs"],[44,22,29,20],[44,25,29,23,"str"],[44,28,29,26],[44,29,29,27,"match"],[44,34,29,23],[44,35,29,33],[44,68,29,23],[44,73,29,71],[44,75,29,2],[45,0,30,2],[45,8,30,6,"len"],[45,11,30,9],[45,14,30,12,"str"],[45,17,30,15],[45,18,30,16,"length"],[45,24,30,12],[45,27,30,25,"surrogatePairs"],[45,41,30,39],[45,42,30,40,"length"],[45,48,30,2],[46,0,31,2],[46,11,31,9,"len"],[46,14,31,12],[46,18,31,16,"min"],[46,21,31,9],[46,26,31,24],[46,33,31,31,"max"],[46,36,31,24],[46,41,31,39],[46,52,31,24],[46,56,31,54,"len"],[46,59,31,57],[46,63,31,61,"max"],[46,66,31,9],[46,67,31,2],[47,0,32,1],[49,0,34,0,"module"],[49,2,34,0,"module"],[49,8,34,6],[49,9,34,7,"exports"],[49,16,34,0],[49,19,34,17,"exports"],[49,26,34,24],[49,27,34,25,"default"],[49,34,34,0]]},"type":"js/module"}]}