{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"lodash","data":{"isAsync":false}},{"name":"./defaultTypes","data":{"isAsync":false}},{"name":"./themeManager","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.TypeManager = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  var _lodash = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"lodash\"));\n\n  var _defaultTypes = _$$_REQUIRE(_dependencyMap[5], \"./defaultTypes\");\n\n  var _themeManager = _$$_REQUIRE(_dependencyMap[6], \"./themeManager\");\n\n  var TypeManager = function () {\n    function TypeManager() {\n      (0, _classCallCheck2.default)(this, TypeManager);\n    }\n\n    (0, _createClass2.default)(TypeManager, null, [{\n      key: \"getBaseTypeMergeValue\",\n      value: function getBaseTypeMergeValue(baseType, mergeType, key) {\n        var baseStyleValue = TypeManager.getStyleValue(baseType[key]);\n        var mergeStyleValue = TypeManager.getStyleValue(mergeType[key]);\n        var value = {};\n\n        if (baseStyleValue) {\n          if (typeof mergeStyleValue === 'object') {\n            if (typeof baseStyleValue !== 'object') {\n              value = {};\n            }\n\n            TypeManager.mergeTypes(baseType[key], mergeType[key]);\n          } else {\n            value = mergeStyleValue;\n          }\n        } else {\n          value = mergeStyleValue;\n        }\n\n        return value;\n      }\n    }]);\n    return TypeManager;\n  }();\n\n  exports.TypeManager = TypeManager;\n  TypeManager.userTypes = [];\n  TypeManager.themableTypes = {};\n\n  TypeManager.types = function (theme) {\n    if (!TypeManager.themedTypes) {\n      TypeManager.themedTypes = {};\n\n      _lodash.default.forOwn(TypeManager.themableTypes, function (value, key) {\n        _lodash.default.set(TypeManager.themedTypes, key, value(theme));\n      });\n\n      TypeManager.themedTypes = _lodash.default.merge((0, _defaultTypes.DefaultTypes)(theme), TypeManager.themedTypes, TypeManager.userTypes);\n    }\n\n    return TypeManager.themedTypes;\n  };\n\n  TypeManager.setType = function (element, name, value, parentTypes) {\n    var parentTypesValue = parentTypes;\n\n    if (typeof parentTypes === 'string') {\n      parentTypesValue = parentTypes.split(' ');\n    }\n\n    var newType = TypeManager.createType(value, parentTypesValue, element);\n\n    _lodash.default.set(TypeManager.userTypes, [[element], [name]], newType);\n\n    TypeManager.invalidateTypes();\n  };\n\n  TypeManager.registerTypes = function (element, types) {\n    _lodash.default.set(TypeManager.themableTypes, [element], types);\n\n    TypeManager.invalidateTypes();\n  };\n\n  TypeManager.invalidateTypes = function () {\n    TypeManager.themedTypes = undefined;\n  };\n\n  TypeManager.createType = function (sourceType, parentTypes, componentName) {\n    if (parentTypes && parentTypes.length > 0) {\n      var newType = {};\n      parentTypes.forEach(function (parentType) {\n        var componentTypes = TypeManager.types(_themeManager.RkTheme.current)[componentName][parentType];\n        newType = TypeManager.mergeTypes(newType, componentTypes);\n      });\n      return TypeManager.mergeTypes(newType, sourceType);\n    }\n\n    return sourceType;\n  };\n\n  TypeManager.mergeTypes = function (sourceType, mergeType) {\n    var mergeResult = sourceType;\n    Object.keys(mergeType).forEach(function (key) {\n      mergeResult[key] = TypeManager.getBaseTypeMergeValue(sourceType, mergeType, key);\n    });\n    return mergeResult;\n  };\n\n  TypeManager.getStyleValue = function (value) {\n    var styleValue = value;\n\n    if (typeof value === 'object' && value !== null) {\n      var isPlatformSpecified = Object.prototype.hasOwnProperty.call(value, _reactNative.Platform.OS);\n\n      if (isPlatformSpecified) {\n        styleValue = TypeManager.getStyleValue(value[_reactNative.Platform.OS]);\n      } else {\n        styleValue = Object.create(value);\n      }\n    } else if (typeof value === 'function') {\n      styleValue = value(_themeManager.RkTheme.current);\n    }\n\n    return styleValue;\n  };\n});","map":[[13,0,1,0],[15,0,2,0],[17,0,3,0],[19,0,4,0],[21,6,6,13,"TypeManager"],[21,17],[28,44,66,31,"baseType"],[28,52],[28,54,66,41,"mergeType"],[28,63],[28,65,66,52,"key"],[28,68],[28,70,66,57],[29,0,67,4],[29,12,67,10,"baseStyleValue"],[29,26,67,24],[29,29,67,27,"TypeManager"],[29,40,67,38],[29,41,67,39,"getStyleValue"],[29,54,67,27],[29,55,67,53,"baseType"],[29,63,67,61],[29,64,67,62,"key"],[29,67,67,61],[29,68,67,27],[29,69,67,4],[30,0,68,4],[30,12,68,10,"mergeStyleValue"],[30,27,68,25],[30,30,68,28,"TypeManager"],[30,41,68,39],[30,42,68,40,"getStyleValue"],[30,55,68,28],[30,56,68,54,"mergeType"],[30,65,68,63],[30,66,68,64,"key"],[30,69,68,63],[30,70,68,28],[30,71,68,4],[31,0,69,4],[31,12,69,8,"value"],[31,17,69,13],[31,20,69,16],[31,22,69,4],[33,0,70,4],[33,12,70,8,"baseStyleValue"],[33,26,70,4],[33,28,70,24],[34,0,71,6],[34,14,71,10],[34,21,71,17,"mergeStyleValue"],[34,36,71,10],[34,41,71,37],[34,49,71,6],[34,51,71,47],[35,0,72,8],[35,16,72,12],[35,23,72,19,"baseStyleValue"],[35,37,72,12],[35,42,72,38],[35,50,72,8],[35,52,72,48],[36,0,73,10,"value"],[36,14,73,10,"value"],[36,19,73,15],[36,22,73,18],[36,24,73,10],[37,0,74,9],[39,0,75,8,"TypeManager"],[39,12,75,8,"TypeManager"],[39,23,75,19],[39,24,75,20,"mergeTypes"],[39,34,75,8],[39,35,75,31,"baseType"],[39,43,75,39],[39,44,75,40,"key"],[39,47,75,39],[39,48,75,8],[39,50,75,46,"mergeType"],[39,59,75,55],[39,60,75,56,"key"],[39,63,75,55],[39,64,75,8],[40,0,76,7],[40,11,71,6],[40,17,76,13],[41,0,77,8,"value"],[41,12,77,8,"value"],[41,17,77,13],[41,20,77,16,"mergeStyleValue"],[41,35,77,8],[42,0,78,7],[43,0,79,5],[43,9,70,4],[43,15,79,11],[44,0,80,6,"value"],[44,10,80,6,"value"],[44,15,80,11],[44,18,80,14,"mergeStyleValue"],[44,33,80,6],[45,0,81,5],[47,0,82,4],[47,15,82,11,"value"],[47,20,82,4],[48,0,83,3],[54,0,6,13,"TypeManager"],[54,2,6,13,"TypeManager"],[54,13],[54,14,7,9,"userTypes"],[54,23],[54,26,7,21],[54,28],[55,0,6,13,"TypeManager"],[55,2,6,13,"TypeManager"],[55,13],[55,14,9,9,"themableTypes"],[55,27],[55,30,9,25],[55,32],[57,0,6,13,"TypeManager"],[57,2,6,13,"TypeManager"],[57,13],[57,14,11,9,"types"],[57,19],[57,22,11,17],[57,32,11,18,"theme"],[57,37,11,17],[57,39,11,28],[58,0,12,4],[58,8,12,8],[58,9,12,9,"TypeManager"],[58,20,12,20],[58,21,12,21,"themedTypes"],[58,32,12,4],[58,34,12,34],[59,0,13,6,"TypeManager"],[59,6,13,6,"TypeManager"],[59,17,13,17],[59,18,13,18,"themedTypes"],[59,29,13,6],[59,32,13,32],[59,34,13,6],[61,0,14,6,"_"],[61,22,14,8,"forOwn"],[61,28,14,6],[61,29,14,15,"TypeManager"],[61,40,14,26],[61,41,14,27,"themableTypes"],[61,54,14,6],[61,56,14,42],[61,66,14,43,"value"],[61,71,14,42],[61,73,14,50,"key"],[61,76,14,42],[61,78,14,58],[62,0,15,8,"_"],[62,24,15,10,"set"],[62,27,15,8],[62,28,15,14,"TypeManager"],[62,39,15,25],[62,40,15,26,"themedTypes"],[62,51,15,8],[62,53,15,39,"key"],[62,56,15,8],[62,58,15,44,"value"],[62,63,15,49],[62,64,15,50,"theme"],[62,69,15,49],[62,70,15,8],[63,0,16,7],[63,7,14,6],[65,0,18,6,"TypeManager"],[65,6,18,6,"TypeManager"],[65,17,18,17],[65,18,18,18,"themedTypes"],[65,29,18,6],[65,32,18,32,"_"],[65,48,18,34,"merge"],[65,53,18,32],[65,54,19,8],[65,86,19,21,"theme"],[65,91,19,8],[65,92,18,32],[65,94,20,8,"TypeManager"],[65,105,20,19],[65,106,20,20,"themedTypes"],[65,117,18,32],[65,119,21,8,"TypeManager"],[65,130,21,19],[65,131,21,20,"userTypes"],[65,140,18,32],[65,141,18,6],[66,0,23,5],[68,0,24,4],[68,11,24,11,"TypeManager"],[68,22,24,22],[68,23,24,23,"themedTypes"],[68,34,24,4],[69,0,25,3],[69,3],[71,0,6,13,"TypeManager"],[71,2,6,13,"TypeManager"],[71,13],[71,14,27,9,"setType"],[71,21],[71,24,27,19],[71,34,27,20,"element"],[71,41,27,19],[71,43,27,29,"name"],[71,47,27,19],[71,49,27,35,"value"],[71,54,27,19],[71,56,27,42,"parentTypes"],[71,67,27,19],[71,69,27,58],[72,0,28,4],[72,8,28,8,"parentTypesValue"],[72,24,28,24],[72,27,28,27,"parentTypes"],[72,38,28,4],[74,0,29,4],[74,8,29,8],[74,15,29,15,"parentTypes"],[74,26,29,8],[74,31,29,31],[74,39,29,4],[74,41,29,41],[75,0,30,6,"parentTypesValue"],[75,6,30,6,"parentTypesValue"],[75,22,30,22],[75,25,30,25,"parentTypes"],[75,36,30,36],[75,37,30,37,"split"],[75,42,30,25],[75,43,30,43],[75,46,30,25],[75,47,30,6],[76,0,31,5],[78,0,32,4],[78,8,32,10,"newType"],[78,15,32,17],[78,18,32,20,"TypeManager"],[78,29,32,31],[78,30,32,32,"createType"],[78,40,32,20],[78,41,32,43,"value"],[78,46,32,20],[78,48,32,50,"parentTypesValue"],[78,64,32,20],[78,66,32,68,"element"],[78,73,32,20],[78,74,32,4],[80,0,33,4,"_"],[80,20,33,6,"set"],[80,23,33,4],[80,24,33,10,"TypeManager"],[80,35,33,21],[80,36,33,22,"userTypes"],[80,45,33,4],[80,47,33,33],[80,48,33,34],[80,49,33,35,"element"],[80,56,33,34],[80,57,33,33],[80,59,33,45],[80,60,33,46,"name"],[80,64,33,45],[80,65,33,33],[80,66,33,4],[80,68,33,54,"newType"],[80,75,33,4],[82,0,34,4,"TypeManager"],[82,4,34,4,"TypeManager"],[82,15,34,15],[82,16,34,16,"invalidateTypes"],[82,31,34,4],[83,0,35,3],[83,3],[85,0,6,13,"TypeManager"],[85,2,6,13,"TypeManager"],[85,13],[85,14,37,9,"registerTypes"],[85,27],[85,30,37,25],[85,40,37,26,"element"],[85,47,37,25],[85,49,37,35,"types"],[85,54,37,25],[85,56,37,45],[86,0,38,4,"_"],[86,20,38,6,"set"],[86,23,38,4],[86,24,38,10,"TypeManager"],[86,35,38,21],[86,36,38,22,"themableTypes"],[86,49,38,4],[86,51,38,37],[86,52,38,38,"element"],[86,59,38,37],[86,60,38,4],[86,62,38,48,"types"],[86,67,38,4],[88,0,39,4,"TypeManager"],[88,4,39,4,"TypeManager"],[88,15,39,15],[88,16,39,16,"invalidateTypes"],[88,31,39,4],[89,0,40,3],[89,3],[91,0,6,13,"TypeManager"],[91,2,6,13,"TypeManager"],[91,13],[91,14,42,9,"invalidateTypes"],[91,29],[91,32,42,27],[91,44,42,33],[92,0,43,4,"TypeManager"],[92,4,43,4,"TypeManager"],[92,15,43,15],[92,16,43,16,"themedTypes"],[92,27,43,4],[92,30,43,30,"undefined"],[92,39,43,4],[93,0,44,3],[93,3],[95,0,6,13,"TypeManager"],[95,2,6,13,"TypeManager"],[95,13],[95,14,46,9,"createType"],[95,24],[95,27,46,22],[95,37,46,23,"sourceType"],[95,47,46,22],[95,49,46,35,"parentTypes"],[95,60,46,22],[95,62,46,48,"componentName"],[95,75,46,22],[95,77,46,66],[96,0,47,4],[96,8,47,8,"parentTypes"],[96,19,47,19],[96,23,47,23,"parentTypes"],[96,34,47,34],[96,35,47,35,"length"],[96,41,47,23],[96,44,47,44],[96,45,47,4],[96,47,47,47],[97,0,48,6],[97,10,48,10,"newType"],[97,17,48,17],[97,20,48,20],[97,22,48,6],[98,0,49,6,"parentTypes"],[98,6,49,6,"parentTypes"],[98,17,49,17],[98,18,49,18,"forEach"],[98,25,49,6],[98,26,49,26],[98,36,49,26,"parentType"],[98,46,49,36],[98,48,49,40],[99,0,50,8],[99,12,50,14,"componentTypes"],[99,26,50,28],[99,29,50,31,"TypeManager"],[99,40,50,42],[99,41,50,43,"types"],[99,46,50,31],[99,47,50,49,"RkTheme"],[99,69,50,57,"current"],[99,76,50,31],[99,78,50,66,"componentName"],[99,91,50,31],[99,93,50,81,"parentType"],[99,103,50,31],[99,104,50,8],[100,0,51,8,"newType"],[100,8,51,8,"newType"],[100,15,51,15],[100,18,51,18,"TypeManager"],[100,29,51,29],[100,30,51,30,"mergeTypes"],[100,40,51,18],[100,41,51,41,"newType"],[100,48,51,18],[100,50,51,50,"componentTypes"],[100,64,51,18],[100,65,51,8],[101,0,52,7],[101,7,49,6],[102,0,53,6],[102,13,53,13,"TypeManager"],[102,24,53,24],[102,25,53,25,"mergeTypes"],[102,35,53,13],[102,36,53,36,"newType"],[102,43,53,13],[102,45,53,45,"sourceType"],[102,55,53,13],[102,56,53,6],[103,0,54,5],[105,0,55,4],[105,11,55,11,"sourceType"],[105,21,55,4],[106,0,56,3],[106,3],[108,0,6,13,"TypeManager"],[108,2,6,13,"TypeManager"],[108,13],[108,14,58,9,"mergeTypes"],[108,24],[108,27,58,22],[108,37,58,23,"sourceType"],[108,47,58,22],[108,49,58,35,"mergeType"],[108,58,58,22],[108,60,58,49],[109,0,59,4],[109,8,59,10,"mergeResult"],[109,19,59,21],[109,22,59,24,"sourceType"],[109,32,59,4],[110,0,60,4,"Object"],[110,4,60,4,"Object"],[110,10,60,10],[110,11,60,11,"keys"],[110,15,60,4],[110,16,60,16,"mergeType"],[110,25,60,4],[110,27,60,27,"forEach"],[110,34,60,4],[110,35,60,35],[110,45,60,35,"key"],[110,48,60,38],[110,50,60,42],[111,0,61,6,"mergeResult"],[111,6,61,6,"mergeResult"],[111,17,61,17],[111,18,61,18,"key"],[111,21,61,17],[111,22,61,6],[111,25,61,25,"TypeManager"],[111,36,61,36],[111,37,61,37,"getBaseTypeMergeValue"],[111,58,61,25],[111,59,61,59,"sourceType"],[111,69,61,25],[111,71,61,71,"mergeType"],[111,80,61,25],[111,82,61,82,"key"],[111,85,61,25],[111,86,61,6],[112,0,62,5],[112,5,60,4],[113,0,63,4],[113,11,63,11,"mergeResult"],[113,22,63,4],[114,0,64,3],[114,3],[116,0,6,13,"TypeManager"],[116,2,6,13,"TypeManager"],[116,13],[116,14,85,9,"getStyleValue"],[116,27],[116,30,85,25],[116,40,85,26,"value"],[116,45,85,25],[116,47,85,36],[117,0,86,4],[117,8,86,8,"styleValue"],[117,18,86,18],[117,21,86,21,"value"],[117,26,86,4],[119,0,87,4],[119,8,87,8],[119,15,87,15,"value"],[119,20,87,8],[119,25,87,25],[119,33,87,8],[119,37,87,37,"value"],[119,42,87,42],[119,47,87,47],[119,51,87,4],[119,53,87,53],[120,0,88,6],[120,10,88,12,"isPlatformSpecified"],[120,29,88,31],[120,32,88,34,"Object"],[120,38,88,40],[120,39,88,41,"prototype"],[120,48,88,34],[120,49,88,51,"hasOwnProperty"],[120,63,88,34],[120,64,88,66,"call"],[120,68,88,34],[120,69,88,71,"value"],[120,74,88,34],[120,76,88,78,"Platform"],[120,98,88,87,"OS"],[120,100,88,34],[120,101,88,6],[122,0,89,6],[122,10,89,10,"isPlatformSpecified"],[122,29,89,6],[122,31,89,31],[123,0,90,8,"styleValue"],[123,8,90,8,"styleValue"],[123,18,90,18],[123,21,90,21,"TypeManager"],[123,32,90,32],[123,33,90,33,"getStyleValue"],[123,46,90,21],[123,47,90,47,"value"],[123,52,90,52],[123,53,90,53,"Platform"],[123,75,90,62,"OS"],[123,77,90,52],[123,78,90,21],[123,79,90,8],[124,0,91,7],[124,7,89,6],[124,13,91,13],[125,0,92,8,"styleValue"],[125,8,92,8,"styleValue"],[125,18,92,18],[125,21,92,21,"Object"],[125,27,92,27],[125,28,92,28,"create"],[125,34,92,21],[125,35,92,35,"value"],[125,40,92,21],[125,41,92,8],[126,0,93,7],[127,0,94,5],[127,5,87,4],[127,11,94,11],[127,15,94,15],[127,22,94,22,"value"],[127,27,94,15],[127,32,94,32],[127,42,94,11],[127,44,94,44],[128,0,95,6,"styleValue"],[128,6,95,6,"styleValue"],[128,16,95,16],[128,19,95,19,"value"],[128,24,95,24],[128,25,95,25,"RkTheme"],[128,47,95,33,"current"],[128,54,95,24],[128,55,95,6],[129,0,96,5],[131,0,97,4],[131,11,97,11,"styleValue"],[131,21,97,4],[132,0,98,3],[132,3]]},"type":"js/module"}]}