{"dependencies":[{"name":"./util/assertString","data":{"isAsync":false}},{"name":"./toFloat","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isDivisibleBy;\n\n  var _assertString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"./util/assertString\"));\n\n  var _toFloat = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./toFloat\"));\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function isDivisibleBy(str, num) {\n    (0, _assertString.default)(str);\n    return (0, _toFloat.default)(str) % parseInt(num, 10) === 0;\n  }\n\n  module.exports = exports.default;\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"isDivisibleBy"],[7,33,6,0],[9,0,8,0],[9,6,8,4,"_assertString"],[9,19,8,17],[9,22,8,20,"_interopRequireDefault"],[9,44,8,42],[9,45,8,43,"require"],[9,56,8,50],[9,98,8,42],[9,99,8,0],[11,0,10,0],[11,6,10,4,"_toFloat"],[11,14,10,12],[11,17,10,15,"_interopRequireDefault"],[11,39,10,37],[11,40,10,38,"require"],[11,51,10,45],[11,83,10,37],[11,84,10,0],[13,0,12,0],[13,11,12,9,"_interopRequireDefault"],[13,33,12,0],[13,34,12,32,"obj"],[13,37,12,0],[13,39,12,37],[14,0,12,39],[14,11,12,46,"obj"],[14,14,12,49],[14,18,12,53,"obj"],[14,21,12,56],[14,22,12,57,"__esModule"],[14,32,12,46],[14,35,12,70,"obj"],[14,38,12,46],[14,41,12,76],[15,0,12,78,"default"],[15,6,12,78,"default"],[15,13,12,85],[15,15,12,87,"obj"],[16,0,12,76],[16,5,12,39],[17,0,12,95],[19,0,14,0],[19,11,14,9,"isDivisibleBy"],[19,24,14,0],[19,25,14,23,"str"],[19,28,14,0],[19,30,14,28,"num"],[19,33,14,0],[19,35,14,33],[20,0,15,2],[20,5,15,3],[20,8,15,6,"_assertString"],[20,21,15,19],[20,22,15,20,"default"],[20,29,15,2],[20,31,15,29,"str"],[20,34,15,2],[21,0,16,2],[21,11,16,9],[21,12,16,10],[21,15,16,13,"_toFloat"],[21,23,16,21],[21,24,16,22,"default"],[21,31,16,9],[21,33,16,31,"str"],[21,36,16,9],[21,40,16,38,"parseInt"],[21,48,16,46],[21,49,16,47,"num"],[21,52,16,46],[21,54,16,52],[21,56,16,46],[21,57,16,9],[21,62,16,60],[21,63,16,2],[22,0,17,1],[24,0,19,0,"module"],[24,2,19,0,"module"],[24,8,19,6],[24,9,19,7,"exports"],[24,16,19,0],[24,19,19,17,"exports"],[24,26,19,24],[24,27,19,25,"default"],[24,34,19,0]]},"type":"js/module"}]}