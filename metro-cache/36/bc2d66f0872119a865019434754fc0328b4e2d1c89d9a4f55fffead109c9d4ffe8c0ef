{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = assertString;\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof (typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== (typeof Symbol === \"function\" ? Symbol.prototype : \"@@prototype\") ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function assertString(input) {\n    var isString = typeof input === 'string' || input instanceof String;\n\n    if (!isString) {\n      var invalidType;\n\n      if (input === null) {\n        invalidType = 'null';\n      } else {\n        invalidType = _typeof(input);\n\n        if (invalidType === 'object' && input.constructor && input.constructor.hasOwnProperty('name')) {\n          invalidType = input.constructor.name;\n        } else {\n          invalidType = \"a \".concat(invalidType);\n        }\n      }\n\n      throw new TypeError(\"Expected string but received \".concat(invalidType, \".\"));\n    }\n  }\n\n  module.exports = exports.default;\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"assertString"],[7,32,6,0],[9,0,8,0],[9,11,8,9,"_typeof"],[9,18,8,0],[9,19,8,17,"obj"],[9,22,8,0],[9,24,8,22],[10,0,8,24],[10,8,8,28],[10,15,8,35,"Symbol"],[10,21,8,28],[10,26,8,46],[10,36,8,28],[10,40,8,60],[10,79,8,67,"Symbol"],[10,85,8,73],[10,86,8,74,"iterator"],[10,94,8,60],[10,115,8,87],[10,123,8,24],[10,125,8,97],[11,0,8,99,"_typeof"],[11,6,8,99,"_typeof"],[11,13,8,106],[11,16,8,109],[11,25,8,118,"_typeof"],[11,32,8,109],[11,33,8,126,"obj"],[11,36,8,109],[11,38,8,131],[12,0,8,133],[12,15,8,140],[12,22,8,147,"obj"],[12,25,8,133],[13,0,8,153],[13,7,8,99],[14,0,8,156],[14,5,8,24],[14,11,8,162],[15,0,8,164,"_typeof"],[15,6,8,164,"_typeof"],[15,13,8,171],[15,16,8,174],[15,25,8,183,"_typeof"],[15,32,8,174],[15,33,8,191,"obj"],[15,36,8,174],[15,38,8,196],[16,0,8,198],[16,15,8,205,"obj"],[16,18,8,208],[16,22,8,212],[16,29,8,219,"Symbol"],[16,35,8,212],[16,40,8,230],[16,50,8,205],[16,54,8,244,"obj"],[16,57,8,247],[16,58,8,248,"constructor"],[16,69,8,244],[16,74,8,264,"Symbol"],[16,80,8,205],[16,84,8,274,"obj"],[16,87,8,277],[16,124,8,282,"Symbol"],[16,130,8,288],[16,131,8,289,"prototype"],[16,140,8,277],[16,157,8,205],[16,160,8,301],[16,168,8,205],[16,171,8,312],[16,178,8,319,"obj"],[16,181,8,198],[17,0,8,325],[17,7,8,164],[18,0,8,328],[20,0,8,329],[20,11,8,336,"_typeof"],[20,18,8,343],[20,19,8,344,"obj"],[20,22,8,343],[20,23,8,329],[21,0,8,351],[23,0,10,0],[23,11,10,9,"assertString"],[23,23,10,0],[23,24,10,22,"input"],[23,29,10,0],[23,31,10,29],[24,0,11,2],[24,8,11,6,"isString"],[24,16,11,14],[24,19,11,17],[24,26,11,24,"input"],[24,31,11,17],[24,36,11,34],[24,44,11,17],[24,48,11,46,"input"],[24,53,11,51],[24,65,11,63,"String"],[24,71,11,2],[26,0,13,2],[26,8,13,6],[26,9,13,7,"isString"],[26,17,13,2],[26,19,13,17],[27,0,14,4],[27,10,14,8,"invalidType"],[27,21,14,4],[29,0,16,4],[29,10,16,8,"input"],[29,15,16,13],[29,20,16,18],[29,24,16,4],[29,26,16,24],[30,0,17,6,"invalidType"],[30,8,17,6,"invalidType"],[30,19,17,17],[30,22,17,20],[30,28,17,6],[31,0,18,5],[31,7,16,4],[31,13,18,11],[32,0,19,6,"invalidType"],[32,8,19,6,"invalidType"],[32,19,19,17],[32,22,19,20,"_typeof"],[32,29,19,27],[32,30,19,28,"input"],[32,35,19,27],[32,36,19,6],[34,0,21,6],[34,12,21,10,"invalidType"],[34,23,21,21],[34,28,21,26],[34,36,21,10],[34,40,21,38,"input"],[34,45,21,43],[34,46,21,44,"constructor"],[34,57,21,10],[34,61,21,59,"input"],[34,66,21,64],[34,67,21,65,"constructor"],[34,78,21,59],[34,79,21,77,"hasOwnProperty"],[34,93,21,59],[34,94,21,92],[34,100,21,59],[34,101,21,6],[34,103,21,101],[35,0,22,8,"invalidType"],[35,10,22,8,"invalidType"],[35,21,22,19],[35,24,22,22,"input"],[35,29,22,27],[35,30,22,28,"constructor"],[35,41,22,22],[35,42,22,40,"name"],[35,46,22,8],[36,0,23,7],[36,9,21,6],[36,15,23,13],[37,0,24,8,"invalidType"],[37,10,24,8,"invalidType"],[37,21,24,19],[37,24,24,22],[37,29,24,27,"concat"],[37,35,24,22],[37,36,24,34,"invalidType"],[37,47,24,22],[37,48,24,8],[38,0,25,7],[39,0,26,5],[41,0,28,4],[41,12,28,10],[41,16,28,14,"TypeError"],[41,25,28,10],[41,26,28,24],[41,58,28,56,"concat"],[41,64,28,24],[41,65,28,63,"invalidType"],[41,76,28,24],[41,78,28,76],[41,81,28,24],[41,82,28,10],[41,83,28,4],[42,0,29,3],[43,0,30,1],[45,0,32,0,"module"],[45,2,32,0,"module"],[45,8,32,6],[45,9,32,7,"exports"],[45,16,32,0],[45,19,32,17,"exports"],[45,26,32,24],[45,27,32,25,"default"],[45,34,32,0]]},"type":"js/module"}]}