{"dependencies":[{"name":"./util/assertString","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isISIN;\n\n  var _assertString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"./util/assertString\"));\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;\n\n  function isISIN(str) {\n    (0, _assertString.default)(str);\n\n    if (!isin.test(str)) {\n      return false;\n    }\n\n    var checksumStr = str.replace(/[A-Z]/g, function (character) {\n      return parseInt(character, 36);\n    });\n    var sum = 0;\n    var digit;\n    var tmpNum;\n    var shouldDouble = true;\n\n    for (var i = checksumStr.length - 2; i >= 0; i--) {\n      digit = checksumStr.substring(i, i + 1);\n      tmpNum = parseInt(digit, 10);\n\n      if (shouldDouble) {\n        tmpNum *= 2;\n\n        if (tmpNum >= 10) {\n          sum += tmpNum + 1;\n        } else {\n          sum += tmpNum;\n        }\n      } else {\n        sum += tmpNum;\n      }\n\n      shouldDouble = !shouldDouble;\n    }\n\n    return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;\n  }\n\n  module.exports = exports.default;\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"isISIN"],[7,26,6,0],[9,0,8,0],[9,6,8,4,"_assertString"],[9,19,8,17],[9,22,8,20,"_interopRequireDefault"],[9,44,8,42],[9,45,8,43,"require"],[9,56,8,50],[9,98,8,42],[9,99,8,0],[11,0,10,0],[11,11,10,9,"_interopRequireDefault"],[11,33,10,0],[11,34,10,32,"obj"],[11,37,10,0],[11,39,10,37],[12,0,10,39],[12,11,10,46,"obj"],[12,14,10,49],[12,18,10,53,"obj"],[12,21,10,56],[12,22,10,57,"__esModule"],[12,32,10,46],[12,35,10,70,"obj"],[12,38,10,46],[12,41,10,76],[13,0,10,78,"default"],[13,6,10,78,"default"],[13,13,10,85],[13,15,10,87,"obj"],[14,0,10,76],[14,5,10,39],[15,0,10,95],[17,0,12,0],[17,6,12,4,"isin"],[17,10,12,8],[17,13,12,11],[17,41,12,0],[19,0,14,0],[19,11,14,9,"isISIN"],[19,17,14,0],[19,18,14,16,"str"],[19,21,14,0],[19,23,14,21],[20,0,15,2],[20,5,15,3],[20,8,15,6,"_assertString"],[20,21,15,19],[20,22,15,20,"default"],[20,29,15,2],[20,31,15,29,"str"],[20,34,15,2],[22,0,17,2],[22,8,17,6],[22,9,17,7,"isin"],[22,13,17,11],[22,14,17,12,"test"],[22,18,17,7],[22,19,17,17,"str"],[22,22,17,7],[22,23,17,2],[22,25,17,23],[23,0,18,4],[23,13,18,11],[23,18,18,4],[24,0,19,3],[26,0,21,2],[26,8,21,6,"checksumStr"],[26,19,21,17],[26,22,21,20,"str"],[26,25,21,23],[26,26,21,24,"replace"],[26,33,21,20],[26,34,21,32],[26,42,21,20],[26,44,21,42],[26,54,21,52,"character"],[26,63,21,42],[26,65,21,63],[27,0,22,4],[27,13,22,11,"parseInt"],[27,21,22,19],[27,22,22,20,"character"],[27,31,22,19],[27,33,22,31],[27,35,22,19],[27,36,22,4],[28,0,23,3],[28,5,21,20],[28,6,21,2],[29,0,24,2],[29,8,24,6,"sum"],[29,11,24,9],[29,14,24,12],[29,15,24,2],[30,0,25,2],[30,8,25,6,"digit"],[30,13,25,2],[31,0,26,2],[31,8,26,6,"tmpNum"],[31,14,26,2],[32,0,27,2],[32,8,27,6,"shouldDouble"],[32,20,27,18],[32,23,27,21],[32,27,27,2],[34,0,29,2],[34,9,29,7],[34,13,29,11,"i"],[34,14,29,12],[34,17,29,15,"checksumStr"],[34,28,29,26],[34,29,29,27,"length"],[34,35,29,15],[34,38,29,36],[34,39,29,2],[34,41,29,39,"i"],[34,42,29,40],[34,46,29,44],[34,47,29,2],[34,49,29,47,"i"],[34,50,29,48],[34,52,29,2],[34,54,29,52],[35,0,30,4,"digit"],[35,6,30,4,"digit"],[35,11,30,9],[35,14,30,12,"checksumStr"],[35,25,30,23],[35,26,30,24,"substring"],[35,35,30,12],[35,36,30,34,"i"],[35,37,30,12],[35,39,30,37,"i"],[35,40,30,38],[35,43,30,41],[35,44,30,12],[35,45,30,4],[36,0,31,4,"tmpNum"],[36,6,31,4,"tmpNum"],[36,12,31,10],[36,15,31,13,"parseInt"],[36,23,31,21],[36,24,31,22,"digit"],[36,29,31,21],[36,31,31,29],[36,33,31,21],[36,34,31,4],[38,0,33,4],[38,10,33,8,"shouldDouble"],[38,22,33,4],[38,24,33,22],[39,0,34,6,"tmpNum"],[39,8,34,6,"tmpNum"],[39,14,34,12],[39,18,34,16],[39,19,34,6],[41,0,36,6],[41,12,36,10,"tmpNum"],[41,18,36,16],[41,22,36,20],[41,24,36,6],[41,26,36,24],[42,0,37,8,"sum"],[42,10,37,8,"sum"],[42,13,37,11],[42,17,37,15,"tmpNum"],[42,23,37,21],[42,26,37,24],[42,27,37,8],[43,0,38,7],[43,9,36,6],[43,15,38,13],[44,0,39,8,"sum"],[44,10,39,8,"sum"],[44,13,39,11],[44,17,39,15,"tmpNum"],[44,23,39,8],[45,0,40,7],[46,0,41,5],[46,7,33,4],[46,13,41,11],[47,0,42,6,"sum"],[47,8,42,6,"sum"],[47,11,42,9],[47,15,42,13,"tmpNum"],[47,21,42,6],[48,0,43,5],[50,0,45,4,"shouldDouble"],[50,6,45,4,"shouldDouble"],[50,18,45,16],[50,21,45,19],[50,22,45,20,"shouldDouble"],[50,34,45,4],[51,0,46,3],[53,0,48,2],[53,11,48,9,"parseInt"],[53,19,48,17],[53,20,48,18,"str"],[53,23,48,21],[53,24,48,22,"substr"],[53,30,48,18],[53,31,48,29,"str"],[53,34,48,32],[53,35,48,33,"length"],[53,41,48,29],[53,44,48,42],[53,45,48,18],[53,46,48,17],[53,48,48,46],[53,50,48,17],[53,51,48,9],[53,56,48,54],[53,57,48,55],[53,65,48,63,"sum"],[53,68,48,54],[53,72,48,70],[53,74,48,2],[54,0,49,1],[56,0,51,0,"module"],[56,2,51,0,"module"],[56,8,51,6],[56,9,51,7,"exports"],[56,16,51,0],[56,19,51,17,"exports"],[56,26,51,24],[56,27,51,25,"default"],[56,34,51,0]]},"type":"js/module"}]}