{"dependencies":[{"name":"./util/assertString","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isHash;\n\n  var _assertString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"./util/assertString\"));\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var lengths = {\n    md5: 32,\n    md4: 32,\n    sha1: 40,\n    sha256: 64,\n    sha384: 96,\n    sha512: 128,\n    ripemd128: 32,\n    ripemd160: 40,\n    tiger128: 32,\n    tiger160: 40,\n    tiger192: 48,\n    crc32: 8,\n    crc32b: 8\n  };\n\n  function isHash(str, algorithm) {\n    (0, _assertString.default)(str);\n    var hash = new RegExp(\"^[a-f0-9]{\".concat(lengths[algorithm], \"}$\"));\n    return hash.test(str);\n  }\n\n  module.exports = exports.default;\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"isHash"],[7,26,6,0],[9,0,8,0],[9,6,8,4,"_assertString"],[9,19,8,17],[9,22,8,20,"_interopRequireDefault"],[9,44,8,42],[9,45,8,43,"require"],[9,56,8,50],[9,98,8,42],[9,99,8,0],[11,0,10,0],[11,11,10,9,"_interopRequireDefault"],[11,33,10,0],[11,34,10,32,"obj"],[11,37,10,0],[11,39,10,37],[12,0,10,39],[12,11,10,46,"obj"],[12,14,10,49],[12,18,10,53,"obj"],[12,21,10,56],[12,22,10,57,"__esModule"],[12,32,10,46],[12,35,10,70,"obj"],[12,38,10,46],[12,41,10,76],[13,0,10,78,"default"],[13,6,10,78,"default"],[13,13,10,85],[13,15,10,87,"obj"],[14,0,10,76],[14,5,10,39],[15,0,10,95],[17,0,12,0],[17,6,12,4,"lengths"],[17,13,12,11],[17,16,12,14],[18,0,13,2,"md5"],[18,4,13,2,"md5"],[18,7,13,5],[18,9,13,7],[18,11,12,14],[19,0,14,2,"md4"],[19,4,14,2,"md4"],[19,7,14,5],[19,9,14,7],[19,11,12,14],[20,0,15,2,"sha1"],[20,4,15,2,"sha1"],[20,8,15,6],[20,10,15,8],[20,12,12,14],[21,0,16,2,"sha256"],[21,4,16,2,"sha256"],[21,10,16,8],[21,12,16,10],[21,14,12,14],[22,0,17,2,"sha384"],[22,4,17,2,"sha384"],[22,10,17,8],[22,12,17,10],[22,14,12,14],[23,0,18,2,"sha512"],[23,4,18,2,"sha512"],[23,10,18,8],[23,12,18,10],[23,15,12,14],[24,0,19,2,"ripemd128"],[24,4,19,2,"ripemd128"],[24,13,19,11],[24,15,19,13],[24,17,12,14],[25,0,20,2,"ripemd160"],[25,4,20,2,"ripemd160"],[25,13,20,11],[25,15,20,13],[25,17,12,14],[26,0,21,2,"tiger128"],[26,4,21,2,"tiger128"],[26,12,21,10],[26,14,21,12],[26,16,12,14],[27,0,22,2,"tiger160"],[27,4,22,2,"tiger160"],[27,12,22,10],[27,14,22,12],[27,16,12,14],[28,0,23,2,"tiger192"],[28,4,23,2,"tiger192"],[28,12,23,10],[28,14,23,12],[28,16,12,14],[29,0,24,2,"crc32"],[29,4,24,2,"crc32"],[29,9,24,7],[29,11,24,9],[29,12,12,14],[30,0,25,2,"crc32b"],[30,4,25,2,"crc32b"],[30,10,25,8],[30,12,25,10],[31,0,12,14],[31,3,12,0],[33,0,28,0],[33,11,28,9,"isHash"],[33,17,28,0],[33,18,28,16,"str"],[33,21,28,0],[33,23,28,21,"algorithm"],[33,32,28,0],[33,34,28,32],[34,0,29,2],[34,5,29,3],[34,8,29,6,"_assertString"],[34,21,29,19],[34,22,29,20,"default"],[34,29,29,2],[34,31,29,29,"str"],[34,34,29,2],[35,0,30,2],[35,8,30,6,"hash"],[35,12,30,10],[35,15,30,13],[35,19,30,17,"RegExp"],[35,25,30,13],[35,26,30,24],[35,39,30,37,"concat"],[35,45,30,24],[35,46,30,44,"lengths"],[35,53,30,51],[35,54,30,52,"algorithm"],[35,63,30,51],[35,64,30,24],[35,66,30,64],[35,70,30,24],[35,71,30,13],[35,72,30,2],[36,0,31,2],[36,11,31,9,"hash"],[36,15,31,13],[36,16,31,14,"test"],[36,20,31,9],[36,21,31,19,"str"],[36,24,31,9],[36,25,31,2],[37,0,32,1],[39,0,34,0,"module"],[39,2,34,0,"module"],[39,8,34,6],[39,9,34,7,"exports"],[39,16,34,0],[39,19,34,17,"exports"],[39,26,34,24],[39,27,34,25,"default"],[39,34,34,0]]},"type":"js/module"}]}