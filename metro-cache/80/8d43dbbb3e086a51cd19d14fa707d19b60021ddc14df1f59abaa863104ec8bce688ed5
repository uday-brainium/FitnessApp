{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/get","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"../rkComponent","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.RkSwitch = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/get\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"prop-types\"));\n\n  var _rkComponent = _$$_REQUIRE(_dependencyMap[11], \"../rkComponent\");\n\n  var _jsxFileName = \"/home/bit/uday/projects/newFitApp/node_modules/react-native-ui-kitten/src/components/switch/rkSwitch.android.js\";\n  var switchBorderWidth = 1.5;\n  var switchHeight = 32;\n  var switchWidth = 52;\n  var switchOffsetValue = 20;\n  var thumbSize = switchHeight - switchBorderWidth * 2;\n\n  var RkSwitch = function (_RkComponent) {\n    (0, _inherits2.default)(RkSwitch, _RkComponent);\n\n    function RkSwitch(props, context) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, RkSwitch);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RkSwitch).call(this, props, context));\n      _this.componentName = 'RkSwitch';\n      _this.typeMapping = {\n        component: {}\n      };\n\n      _this.animateSwitch = function (value) {\n        var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n          return null;\n        };\n        _this.switchAnimationActive = true;\n\n        _reactNative.Animated.timing(_this.switchAnimation, {\n          toValue: value ? switchOffsetValue : -switchOffsetValue,\n          duration: 200,\n          easing: _reactNative.Easing.bezier(0.65, 0.12, 0.09, 1.26)\n        }).start(function () {\n          _this.switchAnimationActive = false;\n          callback();\n        });\n      };\n\n      _this.animateThumb = function (value) {\n        var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n          return null;\n        };\n\n        _reactNative.Animated.timing(_this.thumbAnimation, {\n          toValue: value,\n          duration: 150,\n          easing: _reactNative.Easing.linear\n        }).start(callback);\n      };\n\n      _this.animateEllipse = function (value) {\n        _reactNative.Animated.timing(_this.ellipseAnimation, {\n          toValue: value,\n          duration: 200,\n          easing: _reactNative.Easing.linear\n        }).start();\n      };\n\n      _this.onStartShouldSetPanResponder = function () {\n        return true;\n      };\n\n      _this.onStartShouldSetPanResponderCapture = function () {\n        return true;\n      };\n\n      _this.onMoveShouldSetPanResponder = function () {\n        return true;\n      };\n\n      _this.onMoveShouldSetPanResponderCapture = function () {\n        return true;\n      };\n\n      _this.onPanResponderTerminationRequest = function () {\n        return true;\n      };\n\n      _this.onPanResponderGrant = function () {\n        if (_this.props.disabled) {\n          return;\n        }\n\n        if (_this.switchAnimationActive) {\n          _this.switchAnimationActive = false;\n\n          _this.stopAnimations();\n\n          return;\n        }\n\n        _this.animateThumb(thumbSize * 1.2);\n\n        _this.animateEllipse(_this.props.value ? 1 : 0.01);\n      };\n\n      _this.onPanResponderMove = function () {\n        return true;\n      };\n\n      _this.onPanResponderRelease = function (evt, gestureState) {\n        if (!_this.props.disabled) {\n          var propValue = _this.props.value;\n\n          if (!propValue && gestureState.dx > -5 || propValue && gestureState.dx < 5) {\n            _this.toggle(_this.onValueChange);\n          } else {\n            _this.animateEllipse(propValue ? 0.01 : 1);\n          }\n        }\n\n        _this.animateThumb(thumbSize);\n      };\n\n      _this.toggle = function () {\n        var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {\n          return null;\n        };\n        var toValue = !_this.props.value;\n\n        _this.animateSwitch(toValue, function () {\n          _this.switchAnimation.setValue(0);\n\n          callback(toValue);\n        });\n\n        _this.animateThumb(thumbSize);\n      };\n\n      _this.onValueChange = function (value) {\n        if (_this.props.onValueChange) {\n          _this.props.onValueChange(value);\n        }\n      };\n\n      _this.thumbAnimation = new _reactNative.Animated.Value(thumbSize);\n      _this.switchAnimation = new _reactNative.Animated.Value(0);\n      _this.ellipseAnimation = new _reactNative.Animated.Value(props.value ? 0.01 : 1.0);\n      _this.switchAnimationActive = false;\n      _this.panResponder = _reactNative.PanResponder.create({\n        onStartShouldSetPanResponder: _this.onStartShouldSetPanResponder,\n        onStartShouldSetPanResponderCapture: _this.onStartShouldSetPanResponderCapture,\n        onMoveShouldSetPanResponder: _this.onMoveShouldSetPanResponder,\n        onMoveShouldSetPanResponderCapture: _this.onMoveShouldSetPanResponderCapture,\n        onPanResponderTerminationRequest: _this.onPanResponderTerminationRequest,\n        onPanResponderGrant: _this.onPanResponderGrant,\n        onPanResponderMove: _this.onPanResponderMove,\n        onPanResponderRelease: _this.onPanResponderRelease\n      });\n      return _this;\n    }\n\n    (0, _createClass2.default)(RkSwitch, [{\n      key: \"stopAnimations\",\n      value: function stopAnimations() {\n        _reactNative.Animated.timing(this.switchAnimation).stop();\n\n        _reactNative.Animated.timing(this.ellipseAnimation).stop();\n\n        _reactNative.Animated.timing(this.thumbAnimation).stop();\n\n        this.ellipseAnimation.setValue(this.props.value ? 0.01 : 1);\n      }\n    }, {\n      key: \"defineStyles\",\n      value: function defineStyles(additionalTypes) {\n        var _get$call = (0, _get2.default)((0, _getPrototypeOf2.default)(RkSwitch.prototype), \"defineStyles\", this).call(this, additionalTypes),\n            component = _get$call.component;\n\n        var switchStyles = {\n          onTintColor: this.extractNonStyleValue(component, 'onTintColor'),\n          thumbTintColor: this.extractNonStyleValue(component, 'thumbTintColor'),\n          tintColor: this.extractNonStyleValue(component, 'tintColor')\n        };\n        return {\n          componentStyles: component,\n          switchStyles: switchStyles\n        };\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            disabled = _this$props.disabled,\n            onTintColor = _this$props.onTintColor,\n            thumbTintColor = _this$props.thumbTintColor,\n            tintColor = _this$props.tintColor,\n            value = _this$props.value,\n            rkType = _this$props.rkType,\n            style = _this$props.style;\n\n        var _this$defineStyles = this.defineStyles(rkType),\n            componentStyles = _this$defineStyles.componentStyles,\n            switchStyles = _this$defineStyles.switchStyles;\n\n        var interpolatedTintColor = this.switchAnimation.interpolate({\n          inputRange: value ? [-switchOffsetValue, 0] : [0, switchOffsetValue],\n          outputRange: [switchStyles.tintColor || tintColor, switchStyles.onTintColor || onTintColor]\n        });\n        var returnScale = this.switchAnimation.interpolate({\n          inputRange: [-switchOffsetValue, 0],\n          outputRange: [1, 0.01]\n        });\n        return _react.default.createElement(_reactNative.View, {\n          style: [componentStyles, style],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({\n          style: [styles.container, {\n            backgroundColor: interpolatedTintColor\n          }]\n        }, this.panResponder.panHandlers, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          }\n        }), _react.default.createElement(_reactNative.Animated.View, {\n          style: [styles.ellipse, {\n            transform: [{\n              scale: value ? returnScale : this.ellipseAnimation\n            }]\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          }\n        }), _react.default.createElement(_reactNative.Animated.View, {\n          style: [styles.thumb, {\n            width: this.thumbAnimation,\n            alignSelf: value ? 'flex-end' : 'flex-start',\n            transform: [{\n              translateX: this.switchAnimation\n            }],\n            borderColor: interpolatedTintColor,\n            backgroundColor: switchStyles.thumbTintColor || thumbTintColor,\n            elevation: disabled ? 0 : 5\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          }\n        }), _react.default.createElement(_reactNative.Animated.View, {\n          style: [styles.disableBox, {\n            height: disabled ? switchHeight : 0\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          }\n        })));\n      }\n    }]);\n    return RkSwitch;\n  }(_rkComponent.RkComponent);\n\n  exports.RkSwitch = RkSwitch;\n  RkSwitch.propTypes = {\n    disabled: _propTypes.default.bool,\n    onTintColor: _propTypes.default.string,\n    onValueChange: _propTypes.default.func,\n    thumbTintColor: _propTypes.default.string,\n    tintColor: _propTypes.default.string,\n    value: _propTypes.default.bool\n  };\n  RkSwitch.defaultProps = {\n    disabled: false,\n    onTintColor: '#53d669',\n    thumbTintColor: '#ffffff',\n    tintColor: '#e5e5e5',\n    value: false\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      width: switchWidth,\n      height: switchHeight,\n      overflow: 'hidden',\n      justifyContent: 'center',\n      borderRadius: switchHeight / 2\n    },\n    disableBox: {\n      position: 'absolute',\n      alignSelf: 'center',\n      backgroundColor: '#ffffff80',\n      width: switchWidth,\n      borderRadius: switchHeight / 2\n    },\n    ellipse: {\n      position: 'absolute',\n      alignSelf: 'center',\n      backgroundColor: 'white',\n      width: switchWidth - switchBorderWidth * 2,\n      height: switchHeight - switchBorderWidth * 2,\n      borderRadius: (switchHeight - switchBorderWidth * 2) / 2\n    },\n    thumb: {\n      height: thumbSize,\n      width: thumbSize,\n      borderWidth: 0,\n      borderRadius: thumbSize / 2,\n      marginHorizontal: 1.5\n    }\n  });\n});","map":[[23,0,1,0],[25,0,2,0],[27,0,8,0],[29,0,9,0],[32,0,11,0],[32,6,11,6,"switchBorderWidth"],[32,23,11,23],[32,26,11,26],[32,29,11,0],[33,0,12,0],[33,6,12,6,"switchHeight"],[33,18,12,18],[33,21,12,21],[33,23,12,0],[34,0,13,0],[34,6,13,6,"switchWidth"],[34,17,13,17],[34,20,13,20],[34,22,13,0],[35,0,14,0],[35,6,14,6,"switchOffsetValue"],[35,23,14,23],[35,26,14,26],[35,28,14,0],[36,0,15,0],[36,6,15,6,"thumbSize"],[36,15,15,15],[36,18,15,18,"switchHeight"],[36,30,15,30],[36,33,15,34,"switchBorderWidth"],[36,50,15,51],[36,53,15,54],[36,54,15,0],[38,6,95,13,"RkSwitch"],[38,14],[41,0,116,2],[41,22,116,14,"props"],[41,27,116,2],[41,29,116,21,"context"],[41,36,116,2],[41,38,116,30],[42,0,116,30],[44,0,116,30],[45,0,117,4],[45,112,117,10,"props"],[45,117,117,4],[45,119,117,17,"context"],[45,126,117,4],[46,0,116,30],[46,12,96,2,"componentName"],[46,25,116,30],[46,28,96,18],[46,38,116,30],[47,0,116,30],[47,12,97,2,"typeMapping"],[47,23,116,30],[47,26,97,16],[48,0,98,4,"component"],[48,8,98,4,"component"],[48,17,98,13],[48,19,98,15],[49,0,97,16],[49,7,116,30],[51,0,116,30],[51,12,135,2,"animateSwitch"],[51,25,116,30],[51,28,135,18],[51,38,135,19,"value"],[51,43,135,18],[51,45,135,52],[52,0,135,52],[52,12,135,26,"callback"],[52,20,135,52],[52,91,135,37],[53,0,135,37],[53,17,135,43],[53,21,135,37],[54,0,135,37],[54,9,135,52],[55,0,136,4],[55,14,136,9,"switchAnimationActive"],[55,35,136,4],[55,38,136,33],[55,42,136,4],[57,0,137,4,"Animated"],[57,30,137,13,"timing"],[57,36,137,4],[57,37,138,6],[57,43,138,11,"switchAnimation"],[57,58,137,4],[57,60,139,6],[58,0,140,8,"toValue"],[58,10,140,8,"toValue"],[58,17,140,15],[58,19,140,17,"value"],[58,24,140,22],[58,27,140,25,"switchOffsetValue"],[58,44,140,22],[58,47,140,45],[58,48,140,46,"switchOffsetValue"],[58,65,139,6],[59,0,141,8,"duration"],[59,10,141,8,"duration"],[59,18,141,16],[59,20,141,18],[59,23,139,6],[60,0,142,8,"easing"],[60,10,142,8,"easing"],[60,16,142,14],[60,18,142,16,"Easing"],[60,38,142,23,"bezier"],[60,44,142,16],[60,45,142,30],[60,49,142,16],[60,51,142,36],[60,55,142,16],[60,57,142,42],[60,61,142,16],[60,63,142,48],[60,67,142,16],[61,0,139,6],[61,9,137,4],[61,11,144,6,"start"],[61,16,137,4],[61,17,144,12],[61,29,144,18],[62,0,145,6],[62,16,145,11,"switchAnimationActive"],[62,37,145,6],[62,40,145,35],[62,45,145,6],[63,0,146,6,"callback"],[63,10,146,6,"callback"],[63,18,146,14],[64,0,147,5],[64,9,137,4],[65,0,148,3],[65,7,116,30],[67,0,116,30],[67,12,150,2,"animateThumb"],[67,24,116,30],[67,27,150,17],[67,37,150,18,"value"],[67,42,150,17],[67,44,150,51],[68,0,150,51],[68,12,150,25,"callback"],[68,20,150,51],[68,91,150,36],[69,0,150,36],[69,17,150,42],[69,21,150,36],[70,0,150,36],[70,9,150,51],[72,0,151,4,"Animated"],[72,30,151,13,"timing"],[72,36,151,4],[72,37,151,20],[72,43,151,25,"thumbAnimation"],[72,57,151,4],[72,59,151,41],[73,0,152,6,"toValue"],[73,10,152,6,"toValue"],[73,17,152,13],[73,19,152,15,"value"],[73,24,151,41],[74,0,153,6,"duration"],[74,10,153,6,"duration"],[74,18,153,14],[74,20,153,16],[74,23,151,41],[75,0,154,6,"easing"],[75,10,154,6,"easing"],[75,16,154,12],[75,18,154,14,"Easing"],[75,38,154,21,"linear"],[76,0,151,41],[76,9,151,4],[76,11,155,7,"start"],[76,16,151,4],[76,17,155,13,"callback"],[76,25,151,4],[77,0,156,3],[77,7,116,30],[79,0,116,30],[79,12,158,2,"animateEllipse"],[79,26,116,30],[79,29,158,19],[79,39,158,20,"value"],[79,44,158,19],[79,46,158,30],[80,0,159,4,"Animated"],[80,30,159,13,"timing"],[80,36,159,4],[80,37,159,20],[80,43,159,25,"ellipseAnimation"],[80,59,159,4],[80,61,159,43],[81,0,160,6,"toValue"],[81,10,160,6,"toValue"],[81,17,160,13],[81,19,160,15,"value"],[81,24,159,43],[82,0,161,6,"duration"],[82,10,161,6,"duration"],[82,18,161,14],[82,20,161,16],[82,23,159,43],[83,0,162,6,"easing"],[83,10,162,6,"easing"],[83,16,162,12],[83,18,162,14,"Easing"],[83,38,162,21,"linear"],[84,0,159,43],[84,9,159,4],[84,11,163,7,"start"],[84,16,159,4],[85,0,164,3],[85,7,116,30],[87,0,116,30],[87,12,174,2,"onStartShouldSetPanResponder"],[87,40,116,30],[87,43,174,33],[87,55,174,39],[88,0,175,4],[88,15,175,11],[88,19,175,4],[89,0,176,3],[89,7,116,30],[91,0,116,30],[91,12,179,2,"onStartShouldSetPanResponderCapture"],[91,47,116,30],[91,50,179,40],[91,62,179,46],[92,0,180,4],[92,15,180,11],[92,19,180,4],[93,0,181,3],[93,7,116,30],[95,0,116,30],[95,12,184,2,"onMoveShouldSetPanResponder"],[95,39,116,30],[95,42,184,32],[95,54,184,38],[96,0,185,4],[96,15,185,11],[96,19,185,4],[97,0,186,3],[97,7,116,30],[99,0,116,30],[99,12,189,2,"onMoveShouldSetPanResponderCapture"],[99,46,116,30],[99,49,189,39],[99,61,189,45],[100,0,190,4],[100,15,190,11],[100,19,190,4],[101,0,191,3],[101,7,116,30],[103,0,116,30],[103,12,194,2,"onPanResponderTerminationRequest"],[103,44,116,30],[103,47,194,37],[103,59,194,43],[104,0,195,4],[104,15,195,11],[104,19,195,4],[105,0,196,3],[105,7,116,30],[107,0,116,30],[107,12,198,2,"onPanResponderGrant"],[107,31,116,30],[107,34,198,24],[107,46,198,30],[108,0,199,4],[108,12,199,8],[108,18,199,13,"props"],[108,23,199,8],[108,24,199,19,"disabled"],[108,32,199,4],[108,34,199,29],[109,0,200,6],[110,0,201,5],[112,0,202,4],[112,12,202,8],[112,18,202,13,"switchAnimationActive"],[112,39,202,4],[112,41,202,36],[113,0,203,6],[113,16,203,11,"switchAnimationActive"],[113,37,203,6],[113,40,203,35],[113,45,203,6],[115,0,204,6],[115,16,204,11,"stopAnimations"],[115,30,204,6],[117,0,205,6],[118,0,206,5],[120,0,207,4],[120,14,207,9,"animateThumb"],[120,26,207,4],[120,27,207,22,"thumbSize"],[120,36,207,31],[120,39,207,34],[120,42,207,4],[122,0,208,4],[122,14,208,9,"animateEllipse"],[122,28,208,4],[122,29,208,24],[122,35,208,29,"props"],[122,40,208,24],[122,41,208,35,"value"],[122,46,208,24],[122,49,208,43],[122,50,208,24],[122,53,208,47],[122,57,208,4],[123,0,209,3],[123,7,116,30],[125,0,116,30],[125,12,212,2,"onPanResponderMove"],[125,30,116,30],[125,33,212,23],[125,45,212,29],[126,0,213,4],[126,15,213,11],[126,19,213,4],[127,0,214,3],[127,7,116,30],[129,0,116,30],[129,12,216,2,"onPanResponderRelease"],[129,33,116,30],[129,36,216,26],[129,46,216,27,"evt"],[129,49,216,26],[129,51,216,32,"gestureState"],[129,63,216,26],[129,65,216,49],[130,0,217,4],[130,12,217,8],[130,13,217,9],[130,19,217,14,"props"],[130,24,217,9],[130,25,217,20,"disabled"],[130,33,217,4],[130,35,217,30],[131,0,218,6],[131,14,218,12,"propValue"],[131,23,218,21],[131,26,218,24],[131,32,218,29,"props"],[131,37,218,24],[131,38,218,35,"value"],[131,43,218,6],[133,0,219,6],[133,14,219,11],[133,15,219,12,"propValue"],[133,24,219,11],[133,28,219,25,"gestureState"],[133,40,219,37],[133,41,219,38,"dx"],[133,43,219,25],[133,46,219,43],[133,47,219,44],[133,48,219,10],[133,52,219,51,"propValue"],[133,61,219,60],[133,65,219,64,"gestureState"],[133,77,219,76],[133,78,219,77,"dx"],[133,80,219,64],[133,83,219,82],[133,84,219,6],[133,86,219,86],[134,0,220,8],[134,18,220,13,"toggle"],[134,24,220,8],[134,25,220,20],[134,31,220,25,"onValueChange"],[134,44,220,8],[135,0,221,7],[135,11,219,6],[135,17,221,13],[136,0,222,8],[136,18,222,13,"animateEllipse"],[136,32,222,8],[136,33,222,28,"propValue"],[136,42,222,37],[136,45,222,40],[136,49,222,37],[136,52,222,47],[136,53,222,8],[137,0,223,7],[138,0,224,5],[140,0,225,4],[140,14,225,9,"animateThumb"],[140,26,225,4],[140,27,225,22,"thumbSize"],[140,36,225,4],[141,0,226,3],[141,7,116,30],[143,0,116,30],[143,12,228,2,"toggle"],[143,18,116,30],[143,21,228,11],[143,33,228,38],[144,0,228,38],[144,12,228,12,"callback"],[144,20,228,38],[144,91,228,23],[145,0,228,23],[145,17,228,29],[145,21,228,23],[146,0,228,23],[146,9,228,38],[147,0,229,4],[147,12,229,10,"toValue"],[147,19,229,17],[147,22,229,20],[147,23,229,21],[147,29,229,26,"props"],[147,34,229,21],[147,35,229,32,"value"],[147,40,229,4],[149,0,230,4],[149,14,230,9,"animateSwitch"],[149,27,230,4],[149,28,230,23,"toValue"],[149,35,230,4],[149,37,230,32],[149,49,230,38],[150,0,231,6],[150,16,231,11,"switchAnimation"],[150,31,231,6],[150,32,231,27,"setValue"],[150,40,231,6],[150,41,231,36],[150,42,231,6],[152,0,232,6,"callback"],[152,10,232,6,"callback"],[152,18,232,14],[152,19,232,15,"toValue"],[152,26,232,14],[152,27,232,6],[153,0,233,5],[153,9,230,4],[155,0,234,4],[155,14,234,9,"animateThumb"],[155,26,234,4],[155,27,234,22,"thumbSize"],[155,36,234,4],[156,0,235,3],[156,7,116,30],[158,0,116,30],[158,12,237,2,"onValueChange"],[158,25,116,30],[158,28,237,18],[158,38,237,19,"value"],[158,43,237,18],[158,45,237,29],[159,0,238,4],[159,12,238,8],[159,18,238,13,"props"],[159,23,238,8],[159,24,238,19,"onValueChange"],[159,37,238,4],[159,39,238,34],[160,0,239,6],[160,16,239,11,"props"],[160,21,239,6],[160,22,239,17,"onValueChange"],[160,35,239,6],[160,36,239,31,"value"],[160,41,239,6],[161,0,240,5],[162,0,241,3],[162,7,116,30],[164,0,118,4],[164,12,118,9,"thumbAnimation"],[164,26,118,4],[164,29,118,26],[164,33,118,30,"Animated"],[164,55,118,39,"Value"],[164,60,118,26],[164,61,118,45,"thumbSize"],[164,70,118,26],[164,71,118,4],[165,0,119,4],[165,12,119,9,"switchAnimation"],[165,27,119,4],[165,30,119,27],[165,34,119,31,"Animated"],[165,56,119,40,"Value"],[165,61,119,27],[165,62,119,46],[165,63,119,27],[165,64,119,4],[166,0,120,4],[166,12,120,9,"ellipseAnimation"],[166,28,120,4],[166,31,120,28],[166,35,120,32,"Animated"],[166,57,120,41,"Value"],[166,62,120,28],[166,63,120,47,"props"],[166,68,120,52],[166,69,120,53,"value"],[166,74,120,47],[166,77,120,61],[166,81,120,47],[166,84,120,68],[166,87,120,28],[166,88,120,4],[167,0,121,4],[167,12,121,9,"switchAnimationActive"],[167,33,121,4],[167,36,121,33],[167,41,121,4],[168,0,123,4],[168,12,123,9,"panResponder"],[168,24,123,4],[168,27,123,24,"PanResponder"],[168,53,123,37,"create"],[168,59,123,24],[168,60,123,44],[169,0,124,6,"onStartShouldSetPanResponder"],[169,8,124,6,"onStartShouldSetPanResponder"],[169,36,124,34],[169,38,124,36],[169,44,124,41,"onStartShouldSetPanResponder"],[169,72,123,44],[170,0,125,6,"onStartShouldSetPanResponderCapture"],[170,8,125,6,"onStartShouldSetPanResponderCapture"],[170,43,125,41],[170,45,125,43],[170,51,125,48,"onStartShouldSetPanResponderCapture"],[170,86,123,44],[171,0,126,6,"onMoveShouldSetPanResponder"],[171,8,126,6,"onMoveShouldSetPanResponder"],[171,35,126,33],[171,37,126,35],[171,43,126,40,"onMoveShouldSetPanResponder"],[171,70,123,44],[172,0,127,6,"onMoveShouldSetPanResponderCapture"],[172,8,127,6,"onMoveShouldSetPanResponderCapture"],[172,42,127,40],[172,44,127,42],[172,50,127,47,"onMoveShouldSetPanResponderCapture"],[172,84,123,44],[173,0,128,6,"onPanResponderTerminationRequest"],[173,8,128,6,"onPanResponderTerminationRequest"],[173,40,128,38],[173,42,128,40],[173,48,128,45,"onPanResponderTerminationRequest"],[173,80,123,44],[174,0,129,6,"onPanResponderGrant"],[174,8,129,6,"onPanResponderGrant"],[174,27,129,25],[174,29,129,27],[174,35,129,32,"onPanResponderGrant"],[174,54,123,44],[175,0,130,6,"onPanResponderMove"],[175,8,130,6,"onPanResponderMove"],[175,26,130,24],[175,28,130,26],[175,34,130,31,"onPanResponderMove"],[175,52,123,44],[176,0,131,6,"onPanResponderRelease"],[176,8,131,6,"onPanResponderRelease"],[176,29,131,27],[176,31,131,29],[176,37,131,34,"onPanResponderRelease"],[177,0,123,44],[177,7,123,24],[177,8,123,4],[178,0,116,30],[179,0,133,3],[183,39,166,19],[184,0,167,4,"Animated"],[184,30,167,13,"timing"],[184,36,167,4],[184,37,167,20],[184,42,167,25,"switchAnimation"],[184,57,167,4],[184,59,167,42,"stop"],[184,63,167,4],[186,0,168,4,"Animated"],[186,30,168,13,"timing"],[186,36,168,4],[186,37,168,20],[186,42,168,25,"ellipseAnimation"],[186,58,168,4],[186,60,168,43,"stop"],[186,64,168,4],[188,0,169,4,"Animated"],[188,30,169,13,"timing"],[188,36,169,4],[188,37,169,20],[188,42,169,25,"thumbAnimation"],[188,56,169,4],[188,58,169,41,"stop"],[188,62,169,4],[190,0,170,4],[190,13,170,9,"ellipseAnimation"],[190,29,170,4],[190,30,170,26,"setValue"],[190,38,170,4],[190,39,170,35],[190,44,170,40,"props"],[190,49,170,35],[190,50,170,46,"value"],[190,55,170,35],[190,58,170,54],[190,62,170,35],[190,65,170,61],[190,66,170,4],[191,0,171,3],[194,35,243,15,"additionalTypes"],[194,50],[194,52,243,32],[195,0,243,32],[195,127,244,45,"additionalTypes"],[195,142,243,32],[196,0,243,32],[196,12,244,12,"component"],[196,21,243,32],[196,34,244,12,"component"],[196,43,243,32],[198,0,245,4],[198,12,245,10,"switchStyles"],[198,24,245,22],[198,27,245,25],[199,0,246,6,"onTintColor"],[199,10,246,6,"onTintColor"],[199,21,246,17],[199,23,246,19],[199,28,246,24,"extractNonStyleValue"],[199,48,246,19],[199,49,246,45,"component"],[199,58,246,19],[199,60,246,56],[199,73,246,19],[199,74,245,25],[200,0,247,6,"thumbTintColor"],[200,10,247,6,"thumbTintColor"],[200,24,247,20],[200,26,247,22],[200,31,247,27,"extractNonStyleValue"],[200,51,247,22],[200,52,247,48,"component"],[200,61,247,22],[200,63,247,59],[200,79,247,22],[200,80,245,25],[201,0,248,6,"tintColor"],[201,10,248,6,"tintColor"],[201,19,248,15],[201,21,248,17],[201,26,248,22,"extractNonStyleValue"],[201,46,248,17],[201,47,248,43,"component"],[201,56,248,17],[201,58,248,54],[201,69,248,17],[202,0,245,25],[202,9,245,4],[203,0,250,4],[203,15,250,11],[204,0,250,13,"componentStyles"],[204,10,250,13,"componentStyles"],[204,25,250,28],[204,27,250,30,"component"],[204,36,250,11],[205,0,250,41,"switchStyles"],[205,10,250,41,"switchStyles"],[205,22,250,53],[205,24,250,41,"switchStyles"],[206,0,250,11],[206,9,250,4],[207,0,251,3],[210,31,253,11],[211,0,253,11],[211,26,262,8],[211,31,262,13,"props"],[211,36,253,11],[212,0,253,11],[212,12,255,6,"disabled"],[212,20,253,11],[212,35,255,6,"disabled"],[212,43,253,11],[213,0,253,11],[213,12,256,6,"onTintColor"],[213,23,253,11],[213,38,256,6,"onTintColor"],[213,49,253,11],[214,0,253,11],[214,12,257,6,"thumbTintColor"],[214,26,253,11],[214,41,257,6,"thumbTintColor"],[214,55,253,11],[215,0,253,11],[215,12,258,6,"tintColor"],[215,21,253,11],[215,36,258,6,"tintColor"],[215,45,253,11],[216,0,253,11],[216,12,259,6,"value"],[216,17,253,11],[216,32,259,6,"value"],[216,37,253,11],[217,0,253,11],[217,12,260,6,"rkType"],[217,18,253,11],[217,33,260,6,"rkType"],[217,39,253,11],[218,0,253,11],[218,12,261,6,"style"],[218,17,253,11],[218,32,261,6,"style"],[218,37,253,11],[220,0,253,11],[220,33,263,46],[220,38,263,51,"defineStyles"],[220,50,263,46],[220,51,263,64,"rkType"],[220,57,263,46],[220,58,253,11],[221,0,253,11],[221,12,263,12,"componentStyles"],[221,27,253,11],[221,49,263,12,"componentStyles"],[221,64,253,11],[222,0,253,11],[222,12,263,29,"switchStyles"],[222,24,253,11],[222,46,263,29,"switchStyles"],[222,58,253,11],[224,0,264,4],[224,12,264,10,"interpolatedTintColor"],[224,33,264,31],[224,36,264,34],[224,41,264,39,"switchAnimation"],[224,56,264,34],[224,57,264,55,"interpolate"],[224,68,264,34],[224,69,264,67],[225,0,265,6,"inputRange"],[225,10,265,6,"inputRange"],[225,20,265,16],[225,22,265,18,"value"],[225,27,265,23],[225,30,265,26],[225,31,265,27],[225,32,265,28,"switchOffsetValue"],[225,49,265,26],[225,51,265,47],[225,52,265,26],[225,53,265,23],[225,56,265,52],[225,57,265,53],[225,58,265,52],[225,60,265,56,"switchOffsetValue"],[225,77,265,52],[225,78,264,67],[226,0,266,6,"outputRange"],[226,10,266,6,"outputRange"],[226,21,266,17],[226,23,266,19],[226,24,267,8,"switchStyles"],[226,36,267,20],[226,37,267,21,"tintColor"],[226,46,267,8],[226,50,267,34,"tintColor"],[226,59,266,19],[226,61,268,8,"switchStyles"],[226,73,268,20],[226,74,268,21,"onTintColor"],[226,85,268,8],[226,89,268,36,"onTintColor"],[226,100,266,19],[227,0,264,67],[227,9,264,34],[227,10,264,4],[228,0,271,4],[228,12,271,10,"returnScale"],[228,23,271,21],[228,26,271,24],[228,31,271,29,"switchAnimation"],[228,46,271,24],[228,47,271,45,"interpolate"],[228,58,271,24],[228,59,271,57],[229,0,272,6,"inputRange"],[229,10,272,6,"inputRange"],[229,20,272,16],[229,22,272,18],[229,23,272,19],[229,24,272,20,"switchOffsetValue"],[229,41,272,18],[229,43,272,39],[229,44,272,18],[229,45,271,57],[230,0,273,6,"outputRange"],[230,10,273,6,"outputRange"],[230,21,273,17],[230,23,273,19],[230,24,273,20],[230,25,273,19],[230,27,273,23],[230,31,273,19],[231,0,271,57],[231,9,271,24],[231,10,271,4],[232,0,275,4],[232,15,276,6],[232,44,276,7],[232,61,276,6],[233,0,276,12],[233,10,276,12],[233,15,276,17],[233,17,276,19],[233,18,276,20,"componentStyles"],[233,33,276,19],[233,35,276,37,"style"],[233,40,276,19],[233,41,276,6],[234,0,276,6],[235,0,276,6],[236,0,276,6],[237,0,276,6],[238,0,276,6],[238,11,277,8],[238,40,277,9],[238,61,277,8],[238,62,277,18],[238,66,277,8],[239,0,278,10],[239,10,278,10],[239,15,278,15],[239,17,278,17],[239,18,278,18,"styles"],[239,24,278,24],[239,25,278,25,"container"],[239,34,278,17],[239,36,278,36],[240,0,278,38,"backgroundColor"],[240,12,278,38,"backgroundColor"],[240,27,278,53],[240,29,278,55,"interpolatedTintColor"],[241,0,278,36],[241,11,278,17],[242,0,277,8],[242,11,279,14],[242,16,279,19,"panResponder"],[242,28,279,14],[242,29,279,32,"panHandlers"],[242,40,277,8],[243,0,277,8],[244,0,277,8],[245,0,277,8],[246,0,277,8],[247,0,277,8],[247,12,280,10],[247,41,280,11],[247,62,280,10],[247,63,280,20],[247,67,280,10],[248,0,280,25],[248,10,280,25],[248,15,280,30],[248,17,280,32],[248,18,281,12,"styles"],[248,24,281,18],[248,25,281,19,"ellipse"],[248,32,280,32],[248,34,282,12],[249,0,282,14,"transform"],[249,12,282,14,"transform"],[249,21,282,23],[249,23,282,25],[249,24,282,26],[250,0,282,28,"scale"],[250,14,282,28,"scale"],[250,19,282,33],[250,21,282,35,"value"],[250,26,282,40],[250,29,282,43,"returnScale"],[250,40,282,40],[250,43,282,57],[250,48,282,62,"ellipseAnimation"],[251,0,282,26],[251,13,282,25],[252,0,282,12],[252,11,280,32],[252,12,280,10],[253,0,280,10],[254,0,280,10],[255,0,280,10],[256,0,280,10],[257,0,280,10],[257,10,277,8],[257,12,285,10],[257,41,285,11],[257,62,285,10],[257,63,285,20],[257,67,285,10],[258,0,285,25],[258,10,285,25],[258,15,285,30],[258,17,285,32],[258,18,286,12,"styles"],[258,24,286,18],[258,25,286,19,"thumb"],[258,30,285,32],[258,32,287,12],[259,0,288,14,"width"],[259,12,288,14,"width"],[259,17,288,19],[259,19,288,21],[259,24,288,26,"thumbAnimation"],[259,38,287,12],[260,0,289,14,"alignSelf"],[260,12,289,14,"alignSelf"],[260,21,289,23],[260,23,289,25,"value"],[260,28,289,30],[260,31,289,33],[260,41,289,30],[260,44,289,46],[260,56,287,12],[261,0,290,14,"transform"],[261,12,290,14,"transform"],[261,21,290,23],[261,23,290,25],[261,24,290,26],[262,0,290,28,"translateX"],[262,14,290,28,"translateX"],[262,24,290,38],[262,26,290,40],[262,31,290,45,"switchAnimation"],[263,0,290,26],[263,13,290,25],[263,14,287,12],[264,0,291,14,"borderColor"],[264,12,291,14,"borderColor"],[264,23,291,25],[264,25,291,27,"interpolatedTintColor"],[264,46,287,12],[265,0,292,14,"backgroundColor"],[265,12,292,14,"backgroundColor"],[265,27,292,29],[265,29,292,31,"switchStyles"],[265,41,292,43],[265,42,292,44,"thumbTintColor"],[265,56,292,31],[265,60,292,62,"thumbTintColor"],[265,74,287,12],[266,0,293,14,"elevation"],[266,12,293,14,"elevation"],[266,21,293,23],[266,23,293,25,"disabled"],[266,31,293,33],[266,34,293,36],[266,35,293,33],[266,38,293,40],[267,0,287,12],[267,11,285,32],[267,12,285,10],[268,0,285,10],[269,0,285,10],[270,0,285,10],[271,0,285,10],[272,0,285,10],[272,10,277,8],[272,12,297,10],[272,41,297,11],[272,62,297,10],[272,63,297,20],[272,67,297,10],[273,0,297,25],[273,10,297,25],[273,15,297,30],[273,17,297,32],[273,18,297,33,"styles"],[273,24,297,39],[273,25,297,40,"disableBox"],[273,35,297,32],[273,37,297,52],[274,0,297,54,"height"],[274,12,297,54,"height"],[274,18,297,60],[274,20,297,62,"disabled"],[274,28,297,70],[274,31,297,73,"switchHeight"],[274,43,297,70],[274,46,297,88],[275,0,297,52],[275,11,297,32],[275,12,297,10],[276,0,297,10],[277,0,297,10],[278,0,297,10],[279,0,297,10],[280,0,297,10],[280,10,277,8],[280,11,276,6],[280,12,275,4],[281,0,301,3],[284,4,95,30,"RkComponent"],[284,28],[287,0,95,13,"RkSwitch"],[287,2,95,13,"RkSwitch"],[287,10],[287,11,100,9,"propTypes"],[287,20],[287,23,100,21],[288,0,101,4,"disabled"],[288,4,101,4,"disabled"],[288,12,101,12],[288,14,101,14,"PropTypes"],[288,33,101,24,"bool"],[288,37,100,21],[289,0,102,4,"onTintColor"],[289,4,102,4,"onTintColor"],[289,15,102,15],[289,17,102,17,"PropTypes"],[289,36,102,27,"string"],[289,42,100,21],[290,0,103,4,"onValueChange"],[290,4,103,4,"onValueChange"],[290,17,103,17],[290,19,103,19,"PropTypes"],[290,38,103,29,"func"],[290,42,100,21],[291,0,104,4,"thumbTintColor"],[291,4,104,4,"thumbTintColor"],[291,18,104,18],[291,20,104,20,"PropTypes"],[291,39,104,30,"string"],[291,45,100,21],[292,0,105,4,"tintColor"],[292,4,105,4,"tintColor"],[292,13,105,13],[292,15,105,15,"PropTypes"],[292,34,105,25,"string"],[292,40,100,21],[293,0,106,4,"value"],[293,4,106,4,"value"],[293,9,106,9],[293,11,106,11,"PropTypes"],[293,30,106,21,"bool"],[294,0,100,21],[294,3],[295,0,95,13,"RkSwitch"],[295,2,95,13,"RkSwitch"],[295,10],[295,11,108,9,"defaultProps"],[295,23],[295,26,108,24],[296,0,109,4,"disabled"],[296,4,109,4,"disabled"],[296,12,109,12],[296,14,109,14],[296,19,108,24],[297,0,110,4,"onTintColor"],[297,4,110,4,"onTintColor"],[297,15,110,15],[297,17,110,17],[297,26,108,24],[298,0,111,4,"thumbTintColor"],[298,4,111,4,"thumbTintColor"],[298,18,111,18],[298,20,111,20],[298,29,108,24],[299,0,112,4,"tintColor"],[299,4,112,4,"tintColor"],[299,13,112,13],[299,15,112,15],[299,24,108,24],[300,0,113,4,"value"],[300,4,113,4,"value"],[300,9,113,9],[300,11,113,11],[301,0,108,24],[301,3],[303,0,304,0],[303,6,304,6,"styles"],[303,12,304,12],[303,15,304,15,"StyleSheet"],[303,39,304,26,"create"],[303,45,304,15],[303,46,304,33],[304,0,305,2,"container"],[304,4,305,2,"container"],[304,13,305,11],[304,15,305,13],[305,0,306,4,"width"],[305,6,306,4,"width"],[305,11,306,9],[305,13,306,11,"switchWidth"],[305,24,305,13],[306,0,307,4,"height"],[306,6,307,4,"height"],[306,12,307,10],[306,14,307,12,"switchHeight"],[306,26,305,13],[307,0,308,4,"overflow"],[307,6,308,4,"overflow"],[307,14,308,12],[307,16,308,14],[307,24,305,13],[308,0,309,4,"justifyContent"],[308,6,309,4,"justifyContent"],[308,20,309,18],[308,22,309,20],[308,30,305,13],[309,0,310,4,"borderRadius"],[309,6,310,4,"borderRadius"],[309,18,310,16],[309,20,310,18,"switchHeight"],[309,32,310,30],[309,35,310,33],[310,0,305,13],[310,5,304,33],[311,0,312,2,"disableBox"],[311,4,312,2,"disableBox"],[311,14,312,12],[311,16,312,14],[312,0,313,4,"position"],[312,6,313,4,"position"],[312,14,313,12],[312,16,313,14],[312,26,312,14],[313,0,314,4,"alignSelf"],[313,6,314,4,"alignSelf"],[313,15,314,13],[313,17,314,15],[313,25,312,14],[314,0,315,4,"backgroundColor"],[314,6,315,4,"backgroundColor"],[314,21,315,19],[314,23,315,21],[314,34,312,14],[315,0,316,4,"width"],[315,6,316,4,"width"],[315,11,316,9],[315,13,316,11,"switchWidth"],[315,24,312,14],[316,0,317,4,"borderRadius"],[316,6,317,4,"borderRadius"],[316,18,317,16],[316,20,317,18,"switchHeight"],[316,32,317,30],[316,35,317,33],[317,0,312,14],[317,5,304,33],[318,0,319,2,"ellipse"],[318,4,319,2,"ellipse"],[318,11,319,9],[318,13,319,11],[319,0,320,4,"position"],[319,6,320,4,"position"],[319,14,320,12],[319,16,320,14],[319,26,319,11],[320,0,321,4,"alignSelf"],[320,6,321,4,"alignSelf"],[320,15,321,13],[320,17,321,15],[320,25,319,11],[321,0,322,4,"backgroundColor"],[321,6,322,4,"backgroundColor"],[321,21,322,19],[321,23,322,21],[321,30,319,11],[322,0,323,4,"width"],[322,6,323,4,"width"],[322,11,323,9],[322,13,323,11,"switchWidth"],[322,24,323,22],[322,27,323,26,"switchBorderWidth"],[322,44,323,43],[322,47,323,46],[322,48,319,11],[323,0,324,4,"height"],[323,6,324,4,"height"],[323,12,324,10],[323,14,324,12,"switchHeight"],[323,26,324,24],[323,29,324,28,"switchBorderWidth"],[323,46,324,45],[323,49,324,48],[323,50,319,11],[324,0,325,4,"borderRadius"],[324,6,325,4,"borderRadius"],[324,18,325,16],[324,20,325,18],[324,21,325,19,"switchHeight"],[324,33,325,31],[324,36,325,35,"switchBorderWidth"],[324,53,325,52],[324,56,325,55],[324,57,325,18],[324,61,325,61],[325,0,319,11],[325,5,304,33],[326,0,327,2,"thumb"],[326,4,327,2,"thumb"],[326,9,327,7],[326,11,327,9],[327,0,328,4,"height"],[327,6,328,4,"height"],[327,12,328,10],[327,14,328,12,"thumbSize"],[327,23,327,9],[328,0,329,4,"width"],[328,6,329,4,"width"],[328,11,329,9],[328,13,329,11,"thumbSize"],[328,22,327,9],[329,0,330,4,"borderWidth"],[329,6,330,4,"borderWidth"],[329,17,330,15],[329,19,330,17],[329,20,327,9],[330,0,331,4,"borderRadius"],[330,6,331,4,"borderRadius"],[330,18,331,16],[330,20,331,18,"thumbSize"],[330,29,331,27],[330,32,331,30],[330,33,327,9],[331,0,332,4,"marginHorizontal"],[331,6,332,4,"marginHorizontal"],[331,22,332,20],[331,24,332,22],[332,0,327,9],[333,0,304,33],[333,3,304,15],[333,4,304,0]]},"type":"js/module"}]}